name: Release build

on:
  push:
  workflow_dispatch:

jobs:
  prepare:
    name: Create dist
    runs-on: ubuntu-latest
    container: node:12
    strategy:
      matrix:
        lambda: ["modules/webhook/lambdas/webhook", "modules/runner-binaries-syncer/lambdas/runner-binaries-syncer", "modules/runners/lambdas/runners"]
    steps:
      - name: Extract lambda name
        id: lambda
        env:
          LAMBDA: ${{ matrix.lambda }}
        run: echo ::set-output name=name::${LAMBDA##*/}
      - uses: actions/checkout@v2
      - name: Add zip
        run: apt update && apt install zip
      - name: Build dist
        working-directory: ${{ matrix.lambda }}
        run: yarn install && yarn run test && yarn dist
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.lambda.outputs.name }}
          path: ${{ matrix.lambda }}/${{ steps.lambda.outputs.name }}.zip
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      prepare
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/download-artifact@v2
        with:
          name: webhook
          path: artifacts
      - uses: actions/download-artifact@v2
        with:
          name: runners
          path: artifacts
      - uses: actions/download-artifact@v2
        with:
          name: runner-binaries-syncer
          path: artifacts

      - name: Dry run release
        # if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Read only token
        run: |
          cp .release/* .
          yarn
          yarn release --repositoryUrl https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
